generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model candidate {
  candidate_id  String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lgu_id        String?   @db.Uuid
  ballot_number Int
  ballot_name   String
  position      String
  province_id   String?   @db.Uuid
  lgu           lgu?      @relation(fields: [lgu_id], references: [lgu_id], onDelete: Cascade, onUpdate: NoAction)
  province      province? @relation(fields: [province_id], references: [province_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model lgu {
  lgu_id               String      @id(map: "location_pkey") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  lgu                  String
  province_name        String?
  region               String?
  province_id          String?     @db.Uuid
  max_provincial_board Int?
  candidate            candidate[]
  province             province?   @relation(fields: [province_id], references: [province_id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model province {
  province_id String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  region      String
  candidate   candidate[]
  lgu         lgu[]
}
